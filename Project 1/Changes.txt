The genode code structure is organized as follows
1) repos - This folder contains the core part of source code which is further subdivided into mainly
	a) base - This tree contains code written by the creators of genode which can be used by developers to their liking.
	b) base-hw - This tree contains code written for basic ARM hardware.
	c) os - This tree contains the basic functionalities like device drivers and other system services.

Execution
To run a custom component, we do a make on a run file(.run) extension with a location relative to a tree inside repos folder. If a run file say hello.run is located in repos/base/run we do 
make run/hello .

The makefile first has to find the corresponding run file. This is specified in a build.conf file located in build/$platform where $platform is the platform on which we try to build. Here it is hw_sabrelite. After locating the run file, it decides which all objects which it has to build. This is specified in attribute build_objs in the run file. To build an object, it scans for target.mk makefile which tells genode system which all source files needs to be compiled, which all headers files need to be included, libraries required and the name of the target file to be formed. A object to be build may be dependent on other libraries. These dependencies are generated by dep_prg.mk and dep_lib.mk residing in repos/base/mk folder. These dependencies are written to a dynamic makefile libdeps located in build/$platform/var folder. Then make is done on the libdeps file to complete the compilation phase.


